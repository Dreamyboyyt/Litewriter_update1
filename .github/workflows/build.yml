name: Litewriter Android CI/CD

on:
  push:
    branches:
      - main
      - develop # Also trigger on pushes to a 'develop' branch if you use one
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch: # Allows manual triggering of the workflow from GitHub UI

env:
  FLUTTER_VERSION: '3.32.3' # Using a recent stable Flutter version
  JAVA_VERSION: '17'       # Recommended Java version for Android builds
  # Securely store your signing credentials as GitHub Secrets.
  # DO NOT hardcode these values directly in this file.
  # Example secrets (uncomment and configure if you plan to sign in CI):
  # KEY_STORE_FILE_BASE64: ${{ secrets.KEY_STORE_FILE_BASE64 }} # Base64 encoded .jks or .keystore file
  # KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
  # KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
  # KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

jobs:
  build_android:
    runs-on: ubuntu-latest # Using the latest Ubuntu runner for up-to-date environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Using the latest stable checkout action

      - name: Set up Java
        uses: actions/setup-java@v4 # Using the latest stable setup-java action
        with:
          distribution: 'temurin' # A widely used and reliable JDK distribution
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2 # Latest stable Flutter action
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true # Essential for faster builds by caching Flutter dependencies

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Generate code (build_runner)
        # This step is crucial for your project as it generates Hive adapters.
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      # --- Optional: APK Signing Configuration (Highly Recommended for Release Builds) ---
      # To enable signing, you MUST create the following GitHub Secrets in your repository settings:
      # - KEY_STORE_FILE_BASE64: The base64 encoded content of your .jks or .keystore file.
      #   You can generate this using: `base64 -w 0 your_keystore_file.jks` (Linux/macOS)
      # - KEY_STORE_PASSWORD: Your keystore password.
      # - KEY_ALIAS: Your key alias.
      # - KEY_PASSWORD: Your key password.

      - name: Decode Keystore File
        run: echo "$KEY_STORE_FILE_BASE64" | base64 --decode > android/app/upload-keystore.jks
        if: env.KEY_STORE_FILE_BASE64 != '' # Only run if the secret is provided

      - name: Create key.properties for Signing
        run: |
          echo "storeFile=upload-keystore.jks" > android/key.properties
          echo "storePassword=$KEY_STORE_PASSWORD" >> android/key.properties
          echo "keyAlias=$KEY_ALIAS" >> android/key.properties
          echo "keyPassword=$KEY_PASSWORD" >> android/key.properties
        if: env.KEY_STORE_FILE_BASE64 != ''

      - name: Build Android APK (Release)
        # This command builds the release APK. If signing secrets are provided,
        # it will automatically attempt to sign the APK using the configured key.properties.
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4 # Latest stable upload-artifact action
        with:
          name: litewriter-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30 # Keep artifact for a longer period

      # --- Optional: Build and Upload Android App Bundle (AAB) ---
      # AAB is the preferred format for publishing to Google Play Store.
      # Uncomment these steps if you plan to publish to Play Store.
      # - name: Build Android App Bundle (Release)
      #   run: flutter build appbundle --release

      # - name: Upload AAB artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: litewriter-release-aab
      #     path: build/app/outputs/bundle/release/app-release.aab
      #     retention-days: 30

  # You could add more jobs here for web, iOS, or desktop builds if needed.
  # For example, a 'deploy_web' job to deploy to Firebase Hosting or GitHub Pages.
  
